type Album {
    id: ID!
    name: String
    released: Int
    artists: [Artist]
    bands: [Band]
    tracks: [Track]
    genres: [Genre]
    image: String
}

type Albums {
    offset: Int!
    limit: Int!
    total: Int!
    items: [Album!]
}

type AlbumDelete {
    acknowledged: Boolean
    deletedCount: Int
}

input AlbumInputPost {
    name: String!
    released: Int
    artists: [ID!]
    bands: [ID!]
    tracks: [ID!]
    genres: [ID!]
    image: String
}

input AlbumInputPut {
    name: String
    released: Int
    artists: [ID!]
    bands: [ID!]
    tracks: [ID!]
    genres: [ID!]
    image: String
}

type Query {
    albums(limit: Int, offset: Int, filter: String): Albums
    album(id: ID!): Album
}

type Mutation {
    createAlbum(content: AlbumInputPost): Album
    updateAlbum(id: ID!, content: AlbumInputPut): Album
    deleteAlbum(id: ID!): AlbumDelete
}