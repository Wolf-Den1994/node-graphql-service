type Band {
    _id: ID!
    name: String
    origin: String
    members: [Member]
    website: String
    genres: [Genre]
}

type Member {
    artist: String
    instrument: String
    years: [String]
}

type Bands {
    offset: Int
    limit: Int
    total: Int
    items: [Band!]
}

type BandDelete {
    acknowledged: Boolean
    deletedCount: Int
}

input BandInput {
    name: String!
    origin: String
    website: String
    members: [MemberInpit]
    genres: [ID]
}

input MemberInpit {
    artist: String
    instrument: String
    years: [String]
}

type Query {
    bands: Bands
    band(_id: ID!): Band
}

type Mutation {
    createBand(content: BandInput): Band
    updateBand(id: ID!, content: BandInput): Band
    deleteBand(id: ID!): BandDelete
}
